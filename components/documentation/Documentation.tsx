"use client"
import { tinaField, useTina } from "tinacms/dist/react";
import { useMemo, useState } from "react";
import { TinaMarkdown } from "tinacms/dist/rich-text";
import { DocumentationQuery } from "../../tina/__generated__/types";
import { Tabs } from '../common'

export const Documentation = (
  props: {
    data: DocumentationQuery;
    variables: object;
    query: string;
  }
) => {

  const { data } = useTina(props)
  const [activeTab, setActiveTab] = useState('desc')

  console.log('data',data)

  const desc = useMemo(() => {
    return data?.documentation?.blocks?.find((block) => block?.__typename === 'DocumentationBlocksDesc')?.['string']
  }, [data])

  const checklists = useMemo(() => {
    return data?.documentation?.blocks?.find((block) => block?.__typename === "DocumentationBlocksChecklists")?.['scenario']
  }, [data])

  return (
    <main className="flex min-h-screen flex-col items-center justify-between p-24">
      <div className="w-full max-w-5xl flex items-start flex-col">
        <h1 className="font-semibold text-5xl" data-tina-field={tinaField(data.documentation, "header")}>
          {data?.documentation?.header}
        </h1>
        <Tabs
          activeTab={activeTab}
          onTabChange={(value: string) => setActiveTab(value)}
          items={[
            {
              name: 'Описание',
              value: 'desc'
            },
            {
              name: 'Сценарии работы',
              value: 'checklists'
            },
            {
              name: 'Структура событий',
              value: 'sctructure'
            }
          ]} />
        {
          activeTab === 'desc' &&
          <div>
            {desc}
          </div>
        }
        {
          activeTab === 'checklists' &&
          <TinaMarkdown
            content={checklists}
            components={{
              SwaggerLink: (props) => <SwaggerLink props={props}/>
          }}
          />
        }
      </div>
    </main>
  )
}

const SwaggerLink = (props) => {
  return (
    <span>
      <a href={props?.link}>
              <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g clipPath="url(#clip0)">
        <path
          d="M10.9471 18.9998C6.68396 18.9704 2.97728 15.4324 3.00603 10.9374C3.03365 6.61224 6.62784 2.97068 11.0752 3.00018C15.3975 3.02893 19.0442 6.61668 19.0055 11.0121C19.0413 15.3677 15.3768 19.0306 10.9471 18.9998ZM10.9471 18.9998C6.68396 18.9704 2.97728 15.4324 3.00603 10.9374C3.03365 6.61224 6.62784 2.97068 11.0752 3.00018C15.3975 3.02893 19.0442 6.61668 19.0055 11.0121C19.0413 15.3677 15.3768 19.0306 10.9471 18.9998Z"
          fill="white"></path>
        <path
          d="M10.9491 17.9373C7.25202 17.9119 4.03777 14.8438 4.06264 10.9457C4.08664 7.19497 7.20346 4.03697 11.0602 4.06266C14.8085 4.08759 17.9708 7.19891 17.9373 11.0106C17.9683 14.7877 14.7905 17.964 10.9491 17.9373ZM10.9491 17.9373C7.25202 17.9119 4.03777 14.8438 4.06264 10.9457C4.08664 7.19497 7.20346 4.03697 11.0602 4.06266C14.8085 4.08759 17.9708 7.19891 17.9373 11.0106C17.9683 14.7877 14.7905 17.964 10.9491 17.9373Z"
          fill="#49A32B"></path>
        <path
          d="M13.5829 10.9972C13.5652 11.3279 13.2763 11.6024 12.9917 11.5546H12.9874C12.9124 11.5547 12.8381 11.54 12.7688 11.5114C12.6995 11.4828 12.6365 11.4408 12.5835 11.3878C12.5304 11.3349 12.4883 11.272 12.4595 11.2027C12.4307 11.1335 12.4159 11.0593 12.4158 10.9843C12.421 10.8323 12.4856 10.6885 12.5958 10.5838C12.706 10.479 12.853 10.4217 13.005 10.4243C13.3203 10.4259 13.6 10.6923 13.5829 10.9972ZM8.51256 14.2012C8.63144 14.2047 8.75044 14.2022 8.88756 14.2022V15.0638C8.03537 15.2079 7.33344 14.9659 7.16119 14.2456C7.10223 13.9807 7.06593 13.7113 7.05269 13.4402C7.03438 13.1532 7.066 12.8631 7.04413 12.5766C6.9835 11.7883 6.88144 11.5192 6.125 11.4819V10.5009C6.17923 10.4883 6.23416 10.4789 6.2895 10.4727C6.70425 10.4522 6.87906 10.3251 6.97181 9.91656C7.01406 9.68704 7.039 9.45468 7.04644 9.22143C7.07931 8.77037 7.06769 8.31199 7.14281 7.86824C7.25138 7.22656 7.64975 6.91481 8.30781 6.87987C8.49506 6.86987 8.68287 6.87837 8.89506 6.87837V7.75899C8.80775 7.76524 8.72775 7.77793 8.64819 7.77556C8.11194 7.75912 8.08425 7.94181 8.04506 8.38568C8.02069 8.66406 8.05438 8.94718 8.03538 9.22656C8.01554 9.50454 7.97836 9.78102 7.92406 10.0544C7.84669 10.4506 7.60312 10.7452 7.26562 10.9952C7.92081 11.4216 7.99538 12.0841 8.03794 12.7569C8.06081 13.1184 8.05037 13.4826 8.08706 13.8423C8.11562 14.1215 8.22425 14.1927 8.51256 14.2012ZM9.06481 10.4244H9.07494C9.14944 10.4256 9.22297 10.4415 9.29133 10.4711C9.35969 10.5008 9.42155 10.5436 9.47336 10.5971C9.52518 10.6507 9.56594 10.7139 9.59332 10.7832C9.6207 10.8525 9.63416 10.9265 9.63294 11.001C9.63278 11.0765 9.61723 11.1512 9.58722 11.2205C9.55721 11.2898 9.51338 11.3522 9.45841 11.404C9.40345 11.4558 9.33849 11.4958 9.26753 11.5216C9.19656 11.5475 9.12108 11.5585 9.04569 11.5542C8.96976 11.5556 8.89434 11.5417 8.8239 11.5133C8.75347 11.4849 8.68947 11.4427 8.63573 11.389C8.58199 11.3354 8.53961 11.2714 8.51111 11.2011C8.48262 11.1307 8.4686 11.0553 8.46988 10.9793C8.47117 10.9034 8.48773 10.8285 8.51859 10.7591C8.54945 10.6898 8.59397 10.6273 8.6495 10.5755C8.70502 10.5237 8.77041 10.4836 8.84177 10.4576C8.91312 10.4317 8.98898 10.4203 9.06481 10.4243V10.4244ZM11.0171 10.4244C11.3597 10.4217 11.5873 10.6437 11.5891 10.9825C11.5909 11.3303 11.3752 11.5528 11.0348 11.5543C10.6886 11.5558 10.4607 11.3368 10.4588 11.0001C10.4541 10.9248 10.4651 10.8492 10.4912 10.7784C10.5174 10.7075 10.558 10.6429 10.6106 10.5887C10.6632 10.5345 10.7265 10.4919 10.7965 10.4636C10.8665 10.4352 10.9416 10.4219 11.0171 10.4243L11.0171 10.4244ZM15.1046 9.99518C15.1958 10.3356 15.3732 10.4553 15.7316 10.4716C15.7903 10.4744 15.8488 10.4843 15.9292 10.4932V11.474C15.8857 11.4884 15.841 11.499 15.7956 11.506C15.3154 11.5359 15.0965 11.7329 15.048 12.2144C15.017 12.5219 15.0196 12.8327 14.9983 13.1412C14.9893 13.4799 14.9585 13.8177 14.906 14.1524C14.7835 14.7589 14.4048 15.0614 13.7792 15.0984C13.5779 15.1102 13.3751 15.1002 13.1579 15.1002V14.2236C13.2748 14.2164 13.3779 14.2064 13.4813 14.204C13.8551 14.1951 13.9873 14.0746 14.0056 13.7033C14.0259 13.2955 14.0347 12.8871 14.0529 12.4792C14.0794 11.8896 14.2408 11.3629 14.7901 10.9951C14.4757 10.7711 14.2234 10.4996 14.1581 10.1337C14.0791 9.69012 14.0535 9.23674 14.0109 8.78693C13.9899 8.56212 13.9909 8.33531 13.969 8.11062C13.9453 7.86812 13.7787 7.78412 13.5579 7.77874C13.4314 7.77562 13.3045 7.77812 13.1428 7.77812V6.92212C14.1746 6.75081 14.8874 7.09412 14.9536 8.08137C14.9813 8.49587 14.9773 8.91243 15.0038 9.32699C15.0154 9.55249 15.0492 9.77637 15.1046 9.99518Z"
          fill="white"></path>
      </g>
      <defs>
        <clipPath id="clip0">
          <rect width="16" height="16" fill="white" transform="translate(3 3)"></rect>
        </clipPath>
      </defs>
    </svg>
      </a>
    </span>
  )
}